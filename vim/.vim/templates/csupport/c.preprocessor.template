== LIST: C_StandardLibs == list ==
 'assert.h'     , 
 'complex.h'    , 
 'ctype.h'      , 
 'errno.h'      , 
 'fenv.h'       , 
 'float.h'      , 
 'inttypes.h'   , 
 'iso646.h'     , 
 'limits.h'     , 
 'locale.h'     , 
 'math.h'       , 
 'setjmp.h'     , 
 'signal.h'     , 
 'stdalign.h'   , 
 'stdarg.h'     , 
 'stdatomic.h'  , 
 'stdbool.h'    , 
 'stddef.h'     , 
 'stdint.h'     , 
 'stdio.h'      , 
 'stdlib.h'     , 
 'stdnoreturn.h', 
 'string.h'     , 
 'tgmath.h'     , 
 'threads.h'    , 
 'time.h'       , 
 'uchar.h'      , 
 'wchar.h'      , 
 'wctype.h'     , 
== ENDLIST ==

== Preprocessor.include std lib header == expandmenu, append, map:pih, shortcut:s ==
|PickList( 'Std. Libs', 'C_StandardLibs' )|
#include <|PICK|><CURSOR>
== ENDTEMPLATE ==

§-------------------------------------------------------------------------
== Preprocessor.include-global == map:pg, shortcut:g, insert ==
#include <<CURSOR>>
§-------------------------------------------------------------------------
== Preprocessor.include-local == map:pl, shortcut:l, insert ==
#include "<CURSOR>"
§-------------------------------------------------------------------------
== Preprocessor.include-header == map:ph, shortcut:h, insert ==
<+includes+>#include "|BASENAME|.h"

<+c_body+>
§-------------------------------------------------------------------------
== Preprocessor.define == map:pd, shortcut:d, insert ==
#define	<CURSOR>			/*  */
§-------------------------------------------------------------------------
== Preprocessor.undefine == map:pu, shortcut:u, insert ==
#undef	<CURSOR>			/*  */
§-------------------------------------------------------------------------
== Preprocessor.if-endif == map:pif, shortcut:i ==
#if  |?CONDITION:u|
<CURSOR><SPLIT>
#endif     /* -----  |CONDITION|  ----- */
§-------------------------------------------------------------------------
== Preprocessor.if-else-endif == map:pie, shortcut:i ==
#if  |?CONDITION:u|
<CURSOR><SPLIT>
#else      /* -----  not |CONDITION|  ----- */
<+ELSE PART+>
#endif     /* -----  not |CONDITION|  ----- */
§-------------------------------------------------------------------------
== Preprocessor.ifdef-else-endif == map:pid, shortcut:f ==
#ifdef  |?CONDITION:u|
<CURSOR><SPLIT>
#else      /* -----  not |CONDITION|  ----- */
<+ELSE PART+>
#endif     /* -----  not |CONDITION|  ----- */
§-------------------------------------------------------------------------
== Preprocessor.ifndef-else-endif == map:pin, shortcut:n ==
#ifndef  |?CONDITION:u|
<CURSOR><SPLIT>
#else      /* -----  not |CONDITION|  ----- */
<+ELSE PART+>
#endif     /* -----  not |CONDITION|  ----- */
§-------------------------------------------------------------------------
== Preprocessor.guard-ifndef == map:pind, shortcut:e ==
#ifndef  __|?BASENAME:u|_INC__
#define  __|BASENAME:u|_INC__

<+header_body+>

#endif   /* ----- #ifndef __|BASENAME:u|_INC__  ----- */
§-------------------------------------------------------------------------
== Preprocessor.error == map:pe, shortcut:o ==
#error	"<CURSOR>"			/*  */
§-------------------------------------------------------------------------
== Preprocessor.line == map:pli, shortcut:l ==
#line	<CURSOR>			/*  */
§-------------------------------------------------------------------------
== Preprocessor.pragma == map:pp, shortcut:p ==
#pragma	<CURSOR>			/*  */
§-------------------------------------------------------------------------
== Preprocessor.warning == map:pw, shortcut:w ==
#warning	<CURSOR>			/*  */
§-------------------------------------------------------------------------
